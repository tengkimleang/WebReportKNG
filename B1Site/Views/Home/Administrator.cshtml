@inject Microsoft.AspNetCore.Mvc.Localization.IViewLocalizer localizer
@*@model B1Site.Models.SaleDailyReport.MasterViewSaleDailyReport*@
@{
    ViewData["Title"] = "Administrator";
}
<head>
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0" />
    <!--Dev-->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/cldrjs/0.4.4/cldr.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/cldrjs/0.4.4/cldr/event.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/cldrjs/0.4.4/cldr/supplemental.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/cldrjs/0.4.4/cldr/unresolved.min.js"></script>
    <link rel="stylesheet" type="text/css" href="https://cdn3.devexpress.com/jslib/21.1.3/css/dx.common.css" />
    <link rel="stylesheet" type="text/css" href="https://cdn3.devexpress.com/jslib/21.1.3/css/dx.light.css" />
    <script src="https://cdn3.devexpress.com/jslib/21.1.5/js/dx.all.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/babel-polyfill/7.4.0/polyfill.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/exceljs/3.3.1/exceljs.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/FileSaver.js/1.3.8/FileSaver.min.js"></script>
    <!--End Dev-->
</head>
<style>
    .widget-loadscreen {
        position: absolute;
        display: -webkit-box;
        display: -ms-flexbox;
        display: flex;
        -webkit-box-align: center;
        -ms-flex-align: center;
        align-items: center;
        -webkit-box-pack: center;
        -ms-flex-pack: center;
        justify-content: center;
        width: 100%;
        height: 100%;
        z-index: 99;
        background: rgba(0,0,0,0.15);
    }

    .btn.btn-kernel {
        font-size: 12px;
        font-family: Arial;
        background-color: #f2e8c5;
        border: 0px;
        color: black;
    }

    .btn-kernel, .btn-primary {
        margin-top: 32px;
    }

    .btn {
        display: inline-block;
        height: auto;
        padding: 0 0px;
        min-height: 25px;
    }

    .btn {
        padding: 7px;
        min-width: 50px;
    }

    .input_datefrom, .input_dateto, .input_user, .input_branch {
        -webkit-transition: all 0.30s ease-in-out;
        -moz-transition: all 0.30s ease-in-out;
        -o-transition: all 0.30s ease-in-out;
        outline: none;
        padding: 3px 0px 3px 3px;
        margin: 5px 1px 3px 0px;
        border: 1px solid #DDDDDD;
        width: 100%;
        min-width: 100%;
        height: 34px;
        font-family: 'Lucida Sans', 'Lucida Sans Regular', 'Lucida Grande', 'Lucida Sans Unicode', Geneva, Verdana, sans-serif;
        font-size: 14px;
        border-radius: 3px;
    }

    .lable_branch, .lable_datefrom, .lable_dateto, .lable_user {
        font-family: Arial;
        font-size: 12px;
        font-weight: 700;
    }

    label {
        margin-bottom: 0px;
        line-height: 20px;
    }
</style>
<div class="content-header" style="padding-bottom:0px;">
    <div class="widget-loadscreen" style="display: none;">
        <img src="~/image/loading.gif">
    </div>
    <div class="container-fluid">
        <div class="row mb-2">
            <div class="col-sm-6">
                <h1 class="m-0">@localizer["Administrator"]</h1>
            </div><!-- /.col -->
            <div class="col-sm-6">
                <ol class="breadcrumb float-sm-right">
                    <li class="breadcrumb-item"><a asp-action="Administrator" asp-controller="Home">@localizer["Administration"]</a></li>
                    <li class="breadcrumb-item active">@localizer["Administrator"]</li>
                </ol>
            </div><!-- /.col -->
        </div><!-- /.row -->
    </div><!-- /.container-fluid -->
</div>
<div class="container" style="padding: 15px;padding-top:0px;">
    <div class="card">
        <div class="card-header">
            @localizer["Administrator"]
        </div>
        <div class="card-body">
            <!--Load Panel-->
            <div class="loadpanel"></div>
            <!--End Load Panel-->
            <!--Bind Data to Grid-->
            <div class="container mt-3">
                <div class="row">
                    <div class="col-12">
                        <div class="demo-container">
                            <div id="gridContainer"></div>
                        </div>
                    </div>
                </div>
            </div>
            <!--End Bind Data to Grid-->
        </div>
    </div>
</div>

<script>
    var today = new Date();
    var dd = String(today.getDate()).padStart(2, '0');
    var mm = String(today.getMonth() + 1).padStart(2, '0'); //January is 0!
    var yyyy = today.getFullYear();
    today = mm + '/' + dd + '/' + yyyy;
    loadReport(today, today);
    $('#btnRunReport').click(function () {
        var datefrom = $('#datefrom').val();
        var dateto = $('#dateto').val();
        if (datefrom == '' || datefrom == null) {
            datefrom = today;
        }
        if (dateto == '' || dateto == null) {
            dateto = today;
        }
        var byItemGroup = ifToDo($('#byItemGroup'));
        var bySaleEmployee = ifToDo($('#bySaleEmployee'));
        var byCategory = ifToDo($('#byCategory'));
        var byCustomerClass = ifToDo($('#byCustomerClass'));
        var byLocation = ifToDo($('#byLocation'));
        var byInventoryID = ifToDo($('#byInventoryID'));
        var byCustomerID = ifToDo($('#byCustomerID'));
        var bySource = ifToDo($('#bySource'));
        var byWarehouse = ifToDo($('#byWarehouse'));
        loadReport(datefrom, dateto, byItemGroup, bySaleEmployee, byCategory,
            byCustomerClass, byLocation, byInventoryID, byCustomerID, bySource, byWarehouse);
    });
    function filterData() {
        var datefrom = $('#datefrom').val();
        var dateto = $('#dateto').val();
        if (datefrom == '' || datefrom==null) {
            datefrom = today;
        }
        if (dateto == '' || dateto == null) {
            dateto = today;
        }
        var byItemGroup = ifToDo($('#byItemGroup'));
        var bySaleEmployee = ifToDo($('#bySaleEmployee'));
        var byCategory = ifToDo($('#byCategory'));
        var byCustomerClass = ifToDo($('#byCustomerClass'));
        var byLocation = ifToDo($('#byLocation'));
        var byInventoryID = ifToDo($('#byInventoryID'));
        var byCustomerID = ifToDo($('#byCustomerID'));
        var bySource = ifToDo($('#bySource'));
        var byWarehouse = ifToDo($('#byWarehouse'));
        loadReport(datefrom, dateto, byItemGroup, bySaleEmployee, byCategory,
            byCustomerClass, byLocation, byInventoryID, byCustomerID, bySource, byWarehouse);
    }
    function ifToDo(condition) {
        if (condition.val() == '' || condition.val() == 0 || condition.val() == undefined || condition.val() == null) {
            return "";
        } else {
            return condition.val();
        }
    }

    var URL = "https://js.devexpress.com/Demos/Mvc/api/DataGridWebApi";

    var ordersStore = new DevExpress.data.CustomStore({
        key: "OrderID",
        load: function () {
            return sendRequest('@Url.Action("GetReportDatabase", "Home")');
        },
        insert: function (values) {
            return sendRequest(URL + "/InsertOrder", "POST", {
                values: JSON.stringify(values)
            });
        },
        update: function (key, values) {
            return sendRequest(URL + "/UpdateOrder", "PUT", {
                key: key,
                values: JSON.stringify(values)
            });
        },
        remove: function (key) {
            return sendRequest(URL + "/DeleteOrder", "DELETE", {
                key: key
            });
        }
    });

    function sendRequest(url, method, data) {
        var d = $.Deferred();

        method = method || "GET";

        logRequest(method, url, data);

        $.ajax(url, {
            method: method || "GET",
            data: data,
            cache: false,
            xhrFields: { withCredentials: true }
        }).done(function (result) {
            d.resolve(method === "GET" ? result.data : result);
            console.log(result);
        }).fail(function (xhr) {
            d.reject(xhr.responseJSON ? xhr.responseJSON.Message : xhr.statusText);
        });

        return d.promise();
    }
    function logRequest(method, url, data) {
        var args = Object.keys(data || {}).map(function (key) {
            return key + "=" + data[key];
        }).join(" ");

        var logList = $("#requests ul"),
            time = DevExpress.localization.formatDate(new Date(), "HH:mm:ss"),
            newItem = $("<li>").text([time, method, url.slice(URL.length), args].join(" "));

        logList.prepend(newItem);
    }

    function loadData() {
        $.ajax({
            url: '@Url.Action("GetReportDatabase", "Home")',
            type: "GET",
            dataType: "JSON",
            beforeSend: function () {
               // loadPanel.show();
            },
            success: function (data) {
                console.log(data);
                return data;
            }
        });

    }
    loadReport();
    function loadReport() {
        var loadPanel = $(".loadpanel").dxLoadPanel({
            shadingColor: "rgba(0,0,0,0.4)",
            position: { of: "#gridContainer" },
            visible: false,
            showIndicator: true,
            showPane: true,
            shading: false,
            closeOnOutsideClick: false,
        }).dxLoadPanel("instance");
        $(function () {
            $("#gridContainer").dxDataGrid({
                dataSource: ordersStore,
                repaintChangesOnly: true,
                loadPanel: {
                        enabled: true
                },
                showBorders: true,
                paging: {
                    enabled: false
                },
                editing: {
                    mode: "form",
                    allowUpdating: true,
                    allowAdding: true,
                    allowDeleting: true
                },
                columns: [
                    {
                        dataField: "ID",
                        caption: "ID",
                        width: 70
                    },
                    //"Action",
                    //"Controller",
                    {
                        dataField: "Language",
                    }, {
                        dataField: "LanguageType",
                        caption: "LangType",
                        //lookup: {
                        //    dataSource: states,
                        //    displayExpr: "Name",
                        //    valueExpr: "ID"
                        //}
                    }
                    //, {
                    //    dataField: "ByOrder",
                    //    dataType: "int"
                    //}
                ]
            });
        });
    }
</script>
